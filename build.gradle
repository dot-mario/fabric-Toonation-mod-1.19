plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
//	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	mavenCentral()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	implementation(include('org.seleniumhq.selenium:selenium-java:4.6.0'))
	implementation(include('org.seleniumhq.selenium:selenium-json:4.6.0'))

	implementation(include('org.seleniumhq.selenium:selenium-api:4.6.0'))
	implementation(include('org.seleniumhq.selenium:selenium-chrome-driver:4.6.0'))
	implementation(include('org.seleniumhq.selenium:selenium-chromium-driver:4.6.0'))
	implementation(include('org.seleniumhq.selenium:selenium-remote-driver:4.6.0'))
	implementation(include('org.seleniumhq.selenium:selenium-manager:4.6.0'))
	implementation(include('org.seleniumhq.selenium:selenium-support:4.6.0'))
	implementation(include('org.seleniumhq.selenium:selenium-http:4.6.0'))

	implementation(include('org.reactivestreams:reactive-streams:1.0.3'))

	// https://mvnrepository.com/artifact/org.apache.httpcomponents.core5/httpcore5
	implementation(include('org.apache.httpcomponents.core5:httpcore5:5.2'))

	// https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
	implementation(include('org.apache.httpcomponents.client5:httpclient5:5.2.1'))

	// https://mvnrepository.com/artifact/org.brotli/dec
	implementation(include('org.brotli:dec:0.1.2'))

	// https://mvnrepository.com/artifact/org.apache.httpcomponents.core5/httpcore5-h2
	implementation(include('org.apache.httpcomponents.core5:httpcore5-h2:5.2'))

	// https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
	implementation(include('io.github.bonigarcia:webdrivermanager:5.3.1'))

	// https://mvnrepository.com/artifact/dev.failsafe/failsafe
	implementation(include('dev.failsafe:failsafe:3.3.0'))

	// https://mvnrepository.com/artifact/org.asynchttpclient/async-http-client
	implementation(include('org.asynchttpclient:async-http-client:2.12.3'))

	// https://mvnrepository.com/artifact/io.netty/netty-codec-http
	implementation(include('io.netty:netty-codec-http:4.1.84.Final'))

	// https://mvnrepository.com/artifact/org.apache.commons/commons-exec
	implementation(include('org.apache.commons:commons-exec:1.3'))

	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
//	modApi ("me.shedaniel.cloth:cloth-config-fabric:8.2.88") {
//		exclude(group: "net.fabricmc.fabric-api")
//	}
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
